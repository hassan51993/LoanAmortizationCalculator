// <auto-generated />
using System;
using LoanAmortizationCalculator.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanAmortizationCalculator.Infrastructure.Migrations
{
    [DbContext(typeof(LoanAmortizationContext))]
    [Migration("20240602125058_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoanAmortizationCalculator.Domain.Entities.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<int>("LoanDurationId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentFrequencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LoanDurationId");

                    b.HasIndex("PaymentFrequencyId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("LoanAmortizationCalculator.Domain.Entities.LoanDuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DurationUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LoanDurations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DurationUnit = "Days",
                            DurationValue = 1
                        },
                        new
                        {
                            Id = 2,
                            DurationUnit = "Days",
                            DurationValue = 30
                        },
                        new
                        {
                            Id = 3,
                            DurationUnit = "Months",
                            DurationValue = 6
                        },
                        new
                        {
                            Id = 4,
                            DurationUnit = "Years",
                            DurationValue = 1
                        });
                });

            modelBuilder.Entity("LoanAmortizationCalculator.Domain.Entities.LoanPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Interest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Principal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("LoanPayments");
                });

            modelBuilder.Entity("LoanAmortizationCalculator.Domain.Entities.PaymentFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentFrequencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Daily"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Monthly"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Quarterly"
                        },
                        new
                        {
                            Id = 4,
                            Name = "SemiAnnually"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Annually"
                        });
                });

            modelBuilder.Entity("LoanAmortizationCalculator.Domain.Entities.Loan", b =>
                {
                    b.HasOne("LoanAmortizationCalculator.Domain.Entities.LoanDuration", "LoanDuration")
                        .WithMany()
                        .HasForeignKey("LoanDurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanAmortizationCalculator.Domain.Entities.PaymentFrequency", "PaymentFrequency")
                        .WithMany()
                        .HasForeignKey("PaymentFrequencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanDuration");

                    b.Navigation("PaymentFrequency");
                });

            modelBuilder.Entity("LoanAmortizationCalculator.Domain.Entities.LoanPayment", b =>
                {
                    b.HasOne("LoanAmortizationCalculator.Domain.Entities.Loan", "Loan")
                        .WithMany("Payments")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("LoanAmortizationCalculator.Domain.Entities.Loan", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
